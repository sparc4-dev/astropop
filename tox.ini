[tox]
envlist =
    py{37,38,39,310}-test{,-alldeps,-devdeps,-olddeps,-ltsdps,-stabledeps}{,-cov}{,-cat}
    build_docs
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]
setenv =
    MPLBACKEND=agg
    cat: ASTROPOP_TEST_CATALOGS=1
    devdeps: PIP_INDEX_URL = {env:PIP_INDEX_URL:https://pypi.anaconda.org/scipy-wheels-nightly/simple:https://pypi.anaconda.org/astropy/simple
}

passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI TRAVIS

changedir = .tmp/{envname}

description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    olddeps: with the oldest supported version of key dependencies
    ltsdeps: with the LTS version of key dependencies
    stabledeps: with the latest stable version of key dependencies
    cov: and test coverage
    astropystable: with the latest stable astropy

deps =
    stabledeps: astropy
    stabledeps: numpy  # keep it free

    olddeps: astropy==4.3.*
    olddeps: numpy==1.17.*
    olddeps: scipy==1.6.*

    ltsdeps: astropy==5.0.*
    ltsdeps: numpy==1.21.*
    ltsdeps: scipy==1.7.*

    build_docs: matplotlib

    devdeps: :NIGHTLY:numpy
    devdeps: git+https://github.com/astropy/astroscrappy.git#egg=astroscrappy
    devdeps: :ASTROPYNIGTLY:astropy

extras =
    test
    alldeps: all

commands =
    pip freeze
    !cov: pytest --pyargs {toxinidir}/tests {toxinidir}/docs --remote-data {posargs}
    cov: pytest --pyargs {toxinidir}/tests {toxinidir}/docs --remote-data --cov astropop --cov-config={toxinidir}/setup.cfg {posargs}

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style, e.g. with flake8
deps = flake8
commands = flake8 astropop --count --max-line-length=100
